---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    ports:
      - '3500:3500'
    environment:
      ZOOKEEPER_CLIENT_PORT: 3500
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    links:
      - zookeeper
    ports:
      - '3501:3501'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:3500'
      KAFKA_ADVERTISED_LISTENERS: 'EXTERNAL://localhost:3501,PLAINTEXT://broker:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_LISTENERS: 'EXTERNAL://0.0.0.0:3501,PLAINTEXT://0.0.0.0:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_REPLICA_FETCH_MAX_BYTES: 100000000
      KAFKA_MESSAGE_MAX_BYTES: 100000000
    restart: on-failure

  schema_registry:
    hostname: schema_registry
    image: ghcr.io/aiven/karapace:develop
    entrypoint:
      - /bin/bash
      - /opt/karapace/start.sh
      - registry
    depends_on:
      - broker
    ports:
      - '3502:8081'
    environment:
      KARAPACE_ADVERTISED_HOSTNAME: schema_registry
      KARAPACE_BOOTSTRAP_URI: broker:9092
      KARAPACE_PORT: 8081
      KARAPACE_HOST: 0.0.0.0
      KARAPACE_CLIENT_ID: karapace
      KARAPACE_GROUP_ID: schema_registry
      KARAPACE_MASTER_ELIGIBILITY: 'true'
      KARAPACE_TOPIC_NAME: _schemas
      KARAPACE_LOG_LEVEL: WARNING
      KARAPACE_COMPATIBILITY: FULL
    restart: on-failure

  kafka_rest:
    hostname: kafka_rest
    image: ghcr.io/aiven/karapace:develop
    entrypoint:
      - /bin/bash
      - /opt/karapace/start.sh
      - rest
    depends_on:
      - broker
      - schema_registry
    ports:
      - '8085:8082'
    environment:
      KARAPACE_PORT: 8082
      KARAPACE_HOST: 0.0.0.0
      KARAPACE_ADVERTISED_HOSTNAME: kafka_rest
      KARAPACE_BOOTSTRAP_URI: broker:9092
      KARAPACE_REGISTRY_HOST: schema_registry
      KARAPACE_REGISTRY_PORT: 8081
      KARAPACE_ADMIN_METADATA_MAX_AGE: 0
      KARAPACE_LOG_LEVEL: WARNING
    restart: on-failure

  # Debugging tools

  kafka_schema_registry_ui:
    image: landoop/schema-registry-ui:latest
    hostname: kafka_schema_registry_ui
    links:
      - schema_registry
    ports:
      - '3601:8000'
    environment:
      SCHEMAREGISTRY_URL: schema_registry:8081
      PROXY: 'true'
      MAX_BYTES: 10485760

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    hostname: kafdrop
    depends_on:
      - broker
      - schema_registry
    ports:
      - 3600:9000
    environment:
      KAFKA_BROKERCONNECT: broker:9092
      SCHEMAREGISTRY_CONNECT: http://schema_registry:8081
      JVM_OPTS: '-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify'
      SERVER_SERVLET_CONTEXTPATH: /
      CMD_ARGS: '--message.format=AVRO'

  time_service:
    image: drivereu/test-bed-time-service:latest
    hostname: time_service
    restart: always
    depends_on:
      - broker
      - schema_registry
    ports:
      - '8100:8100'
    environment:
      KAFKA_BROKER_URL: broker:9092
      SCHEMA_REGISTRY_URL: schema_registry:8081
      AUTO_REGISTER_SCHEMAS: 'true'

  bootstrapper:
    image: drivereu/silent-producer:latest
    hostname: bootstrapper
    depends_on:
      - broker
      - schema_registry
      - kafdrop
      - kafka_schema_registry_ui
    environment:
      SLEEP: 20000 # Wait before registering schemas
      KAFKA_HOST: broker:9092
      SCHEMA_REGISTRY: schema_registry:8081
      PRODUCE_TOPICS: simulation_entity_item,simulation_time_mgmt,system_topic_access_invite,simulation_request_startinject,simulation_entity_post,standard_named_geojson,standard_cap,send_file
      # simulation_request_transport,lcms_plots,simulation_affected_area,simulation_sumo_configuration,standard_cap,chain_power,chain_care,chain_flood,chain,flood_prediction_geojson,flood_actual
    restart: on-failure
    volumes:
      - ./schemas:/src/schemas

  trial_management_tool:
    image: strategyeu/trial-management-tool:latest
    hostname: tmt
    depends_on:
      - broker
      - schema_registry
    ports:
      - '3210:3210'
    environment:
      CLIENT_ID: TB-TrialMgmt
      KAFKA_HOST: broker:9092
      SCHEMA_REGISTRY: schema_registry:8081
      TRIAL_MANAGER_SERVER_PORT: 3210
      PRODUCE: simulation_session_mgmt,system_tm_role_player,standard_cap,standard_geojson
      SSL: 'false'
      SSL_PFX: certs/TB-TrialMgmt.p12
      SSL_PASSPHRASE: changeit
      SSL_CA: certs/test-ca.pem
    volumes:
      - trial-data:/app/trials

  # webmail:
  #   image: drivereu/driver-roundcube
  #   hostname: webmail
  #   container_name: webmail
  #   build:
  #     context: ./../roundcube_driver-eu
  #     dockerfile: Dockerfile
  #   environment:
  #     - ROUNDCUBEMAIL_DEFAULT_HOST=10.5.0.5
  #     - ROUNDCUBEMAIL_SMTP_SERVER=10.5.0.5
  #     - ROUNDCUBEMAIL_DEFAULT_PORT=143
  #     - ROUNDCUBEMAIL_SMTP_PORT=25
  #   ports:
  #     - '80:80'
  #   networks:
  #     static-network:
  #       ipv4_address: 10.5.0.6
  #     default:
  #     backend:
  #   depends_on:
  #     - mailserver

  # mailserver:
  #   image: drivereu/driver-mailserver
  #   hostname: ${HOSTNAME}
  #   domainname: ${DOMAINNAME}
  #   container_name: ${CONTAINER_NAME}
  #   ports:
  #     - '25:25'
  #     - '143:143'
  #     - '587:587'
  #     - '993:993'
  #     - '3000:3000'
  #   build:
  #     context: ./../../packages/mail-manager/mail-server-api
  #     dockerfile: Dockerfile
  #   networks:
  #     static-network:
  #       ipv4_address: 10.5.0.5
  #     default:
  #     backend:
  #   volumes:
  #     - maildata:/var/mail
  #     - mailstate:/var/mail-state
  #     - mailconfig/:/tmp/docker-mailserver/
  #   environment:
  #     - DMS_DEBUG=${DMS_DEBUG}
  #     - ENABLE_CLAMAV=${ENABLE_CLAMAV}
  #     - ONE_DIR=${ONE_DIR}
  #     - ENABLE_POP3=${ENABLE_POP3}
  #     - ENABLE_FAIL2BAN=${ENABLE_FAIL2BAN}
  #     - ENABLE_MANAGESIEVE=${ENABLE_MANAGESIEVE}
  #     - OVERRIDE_HOSTNAME=${OVERRIDE_HOSTNAME}
  #     - POSTMASTER_ADDRESS=${POSTMASTER_ADDRESS}
  #     - POSTSCREEN_ACTION=${POSTSCREEN_ACTION}
  #     - REPORT_RECIPIENT=${REPORT_RECIPIENT}
  #     - REPORT_SENDER=${REPORT_SENDER}
  #     - REPORT_INTERVAL=${REPORT_INTERVAL}
  #     - SMTP_ONLY=${SMTP_ONLY}
  #     - SSL_TYPE=${SSL_TYPE}
  #     - TLS_LEVEL=${TLS_LEVEL}
  #     - SPOOF_PROTECTION=${SPOOF_PROTECTION}
  #     - ENABLE_SRS=${ENABLE_SRS}
  #     - PERMIT_DOCKER=${PERMIT_DOCKER}
  #     - VIRUSMAILS_DELETE_DELAY=${VIRUSMAILS_DELETE_DELAY}
  #     - ENABLE_POSTFIX_VIRTUAL_TRANSPORT=${ENABLE_POSTFIX_VIRTUAL_TRANSPORT}
  #     - POSTFIX_DAGENT=${POSTFIX_DAGENT}
  #     - POSTFIX_MAILBOX_SIZE_LIMIT=${POSTFIX_MAILBOX_SIZE_LIMIT}
  #     - POSTFIX_MESSAGE_SIZE_LIMIT=${POSTFIX_MESSAGE_SIZE_LIMIT}
  #     - ENABLE_SPAMASSASSIN=${ENABLE_SPAMASSASSIN}
  #     - SA_TAG=${SA_TAG}
  #     - SA_TAG2=${SA_TAG2}
  #     - SA_KILL=${SA_KILL}
  #     - SA_SPAM_SUBJECT=${SA_SPAM_SUBJECT}
  #     - ENABLE_FETCHMAIL=${ENABLE_FETCHMAIL}
  #     - FETCHMAIL_POLL=${FETCHMAIL_POLL}
  #     - ENABLE_LDAP=${ENABLE_LDAP}
  #     - LDAP_START_TLS=${LDAP_START_TLS}
  #     - LDAP_SERVER_HOST=${LDAP_SERVER_HOST}
  #     - LDAP_SEARCH_BASE=${LDAP_SEARCH_BASE}
  #     - LDAP_BIND_DN=${LDAP_BIND_DN}
  #     - LDAP_BIND_PW=${LDAP_BIND_PW}
  #     - LDAP_QUERY_FILTER_USER=${LDAP_QUERY_FILTER_USER}
  #     - LDAP_QUERY_FILTER_GROUP=${LDAP_QUERY_FILTER_GROUP}
  #     - LDAP_QUERY_FILTER_ALIAS=${LDAP_QUERY_FILTER_ALIAS}
  #     - LDAP_QUERY_FILTER_DOMAIN=${LDAP_QUERY_FILTER_DOMAIN}
  #     - DOVECOT_TLS=${DOVECOT_TLS}
  #     - DOVECOT_USER_FILTER=${DOVECOT_USER_FILTER}
  #     - DOVECOT_PASS_FILTER=${DOVECOT_PASS_FILTER}
  #     - ENABLE_POSTGREY=${ENABLE_POSTGREY}
  #     - POSTGREY_DELAY=${POSTGREY_DELAY}
  #     - POSTGREY_MAX_AGE=${POSTGREY_MAX_AGE}
  #     - POSTGREY_AUTO_WHITELIST_CLIENTS=${POSTGREY_AUTO_WHITELIST_CLIENTS}
  #     - POSTGREY_TEXT=${POSTGREY_TEXT}
  #     - ENABLE_SASLAUTHD=${ENABLE_SASLAUTHD}
  #     - SASLAUTHD_MECHANISMS=${SASLAUTHD_MECHANISMS}
  #     - SASLAUTHD_MECH_OPTIONS=${SASLAUTHD_MECH_OPTIONS}
  #     - SASLAUTHD_LDAP_SERVER=${SASLAUTHD_LDAP_SERVER}
  #     - SASLAUTHD_LDAP_SSL=${SASLAUTHD_LDAP_SSL}
  #     - SASLAUTHD_LDAP_BIND_DN=${SASLAUTHD_LDAP_BIND_DN}
  #     - SASLAUTHD_LDAP_PASSWORD=${SASLAUTHD_LDAP_PASSWORD}
  #     - SASLAUTHD_LDAP_SEARCH_BASE=${SASLAUTHD_LDAP_SEARCH_BASE}
  #     - SASLAUTHD_LDAP_FILTER=${SASLAUTHD_LDAP_FILTER}
  #     - SASLAUTHD_LDAP_START_TLS=${SASLAUTHD_LDAP_START_TLS}
  #     - SASLAUTHD_LDAP_TLS_CHECK_PEER=${SASLAUTHD_LDAP_TLS_CHECK_PEER}
  #     - SASL_PASSWD=${SASL_PASSWD}
  #     - SRS_EXCLUDE_DOMAINS=${SRS_EXCLUDE_DOMAINS}
  #     - SRS_SECRET=${SRS_SECRET}
  #     - DEFAULT_RELAY_HOST=${DEFAULT_RELAY_HOST}
  #     - RELAY_HOST=${RELAY_HOST}
  #     - RELAY_PORT=${RELAY_PORT}
  #     - RELAY_USER=${RELAY_USER}
  #     - RELAY_PASSWORD=${RELAY_PASSWORD}
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_PTRACE
  #   restart: always

  # mailgateway:
  #   image: drivereu/driver-mailgateway
  #   container_name: mailgateway
  #   build:
  #     context: ./../../packages/server
  #     dockerfile: Dockerfile
  #   ports:
  #     # websocket notifications
  #     - '9996:9996'
  #     # REST api
  #     - '7891:7891'
  #   environment:
  #     - ApiMailServerUrl=http://10.5.0.5:3000
  #     - LargeFileServiceUrl=http://large_file_service:9090/upload
  #     - SmtpHost=10.5.0.5
  #     - SmtpPort=25
  #     - IMapHost=10.5.0.5
  #     - IMapPort=993
  #     - kafka_kafkaHost=broker:9092
  #     - kafka_schemaRegistryUrl=schema_registry:3502
  #     - kafka_mediaTopicName=simulation_entity_post
  #     - kafka_connectToKafka=true
  #     - server_port=7891
  #   depends_on:
  #     - mailserver
  #     - broker
  #     - large_file_service
  #     - schema_registry
  #   networks:
  #     static-network:
  #       ipv4_address: 10.5.0.10
  #     default:
  #   restart: always
  # mailmonitor:
  #   image: driver-mailmonitor
  #   container_name: mailmonitor
  #   build:
  #     context: ./../../packages/server-monitor
  #     dockerfile: Dockerfile
  #   ports:
  #     - '4200:4200'
  #   links:
  #     - mailgateway
  #   depends_on:
  #     - mailgateway
  #   networks:
  #     static-network:
  #       ipv4_address: 10.5.0.11
  #     default:
  #     backend:
  #   restart: always

  # copper_gui:
  #   image: drivereu/copper-gui:0.0.5
  #   hostname: copper_gui
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - broker
  #     - schema_registry
  #     - copper_server
  #   environment:
  #     VUE_APP_COPPER_LAYER_URL: "'http://localhost:3007'"
  #     VUE_APP_COPPER_LOG_URL: "'http://localhost:3007/logs'"
  #     VUE_APP_COPPER_SOCKET_SERVER_URL: "'http://localhost:3007'"
  #   command:
  #     [
  #       'sh',
  #       '-c',
  #       'echo "var VUE_APP_COPPER_LAYER_URL=$$VUE_APP_COPPER_LAYER_URL;var VUE_APP_COPPER_LOG_URL=$$VUE_APP_COPPER_LOG_URL;var VUE_APP_COPPER_SOCKET_SERVER_URL=$$VUE_APP_COPPER_SOCKET_SERVER_URL" > /copper/global-vars-copper.js && http-server /copper',
  #     ]

  # copper_server:
  #   image: drivereu/copper-server:0.0.5
  #   depends_on:
  #     - broker
  #     - schema_registry
  #     - silent-producer
  #   ports:
  #     - '3007:3007'
  #   environment:
  #     KAFKA_HOST: broker:9092
  #     SCHEMA_REGISTRY: http://schema_registry:3502
  #     VUE_APP_COPPER_LAYER_URL: http://localhost:3007
  #     VUE_APP_COPPER_LOG_URL: http://localhost:3007/logs
  #     VUE_APP_COPPER_SOCKET_SERVER_URL: http://localhost:3007
  #     COPPER_SERVER_PORT: 3007
  #     COPPER_CLIENT_ID: Copper
  #     SSL: 'false'
  #   volumes:
  #     - ./copper-config/configs:/configs

  large_file_service:
    image: drivereu/large-file-service:latest
    hostname: large_file_service
    ports:
      - '9090:9090'
    networks:
      - default
      - backend
    environment:
      HOST: localhost
      PORT: 9090

volumes:
  maildata:
    driver: local
  mailstate:
    driver: local
  mailconfig:
    driver: local
  trial-data:
networks:
  static-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
  backend:
    driver: 'bridge'
